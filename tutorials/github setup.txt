===================================
GitHub Setup Guide
For NVIDIA Jetson Orin Nano
===================================

1. PREREQUISITES
- Jetson Orin Nano with internet access
- GitHub account (create at github.com)
- Terminal access (Ctrl+Alt+T)

2. INITIAL SETUP

1. Install Git:
   sudo apt update
   sudo apt install git

2. Configure Git (run these one-time commands):
   git config --global user.name "Your Name"
   git config --global user.email "your.email@example.com"

3. Verify configuration:
   git config --list

3. AUTHENTICATION SETUP

Recommended: SSH Authentication
1. Generate SSH key:
   ssh-keygen -t ed25519 -C "your.email@example.com"
   (Press Enter for all defaults)

2. Add key to ssh-agent:
   eval "$(ssh-agent -s)"
   ssh-add ~/.ssh/id_ed25519

3. Copy public key:
   cat ~/.ssh/id_ed25519.pub

4. Add key to GitHub:
   - Go to github.com/settings/keys
   - Click "New SSH Key"
   - Paste your public key

4. BASIC WORKFLOW

1. Clone a repository:
   git clone git@github.com:username/repository.git

2. Create new repository:
   mkdir project-name
   cd project-name
   git init
   git remote add origin git@github.com:username/repository.git

3. Daily workflow:
   git add .
   git commit -m "Descriptive message"
   git push origin main

5. TROUBLESHOOTING

Common Issues:
- Permission denied (publickey):
  Verify SSH key is added to GitHub account

- Authentication failed:
  Try HTTPS instead:
  git remote set-url origin https://github.com/username/repository.git

6. RECOMMENDED TOOLS

1. Git GUI (optional):
   sudo apt install git-gui

2. VS Code Git integration:
   - Install VS Code
   - Open Command Palette (Ctrl+Shift+P)
   - Select "Git: Clone"

7. SECURITY BEST PRACTICES
- Use SSH keys instead of HTTPS
- Enable 2FA on GitHub account
- Never commit sensitive data
- Use .gitignore for build files
